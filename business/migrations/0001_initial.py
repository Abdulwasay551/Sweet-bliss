# Generated by Django 5.2.5 on 2025-09-02 00:34

import django.core.validators
import django.db.models.deletion
import modelcluster.fields
import wagtail.fields
import wagtail.search.index
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0095_groupsitepermission'),
        ('wagtailimages', '0027_image_description'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Icon class or emoji', max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Product Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AboutPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('meta_description', models.TextField(blank=True, help_text='Meta description for search engines (max 160 characters). If empty, search_description will be used.', max_length=160, null=True, validators=[django.core.validators.MaxLengthValidator(160)], verbose_name='Meta Description')),
                ('meta_keywords', models.CharField(blank=True, help_text='Keywords separated by commas', max_length=255, null=True, verbose_name='Meta Keywords')),
                ('og_title', models.CharField(blank=True, help_text='Open Graph title (Facebook, Twitter sharing). If empty, seo_title will be used.', max_length=60, null=True, verbose_name='OG Title')),
                ('og_description', models.TextField(blank=True, help_text='Open Graph description (Facebook, Twitter sharing)', max_length=160, null=True, verbose_name='OG Description')),
                ('twitter_title', models.CharField(blank=True, help_text='Twitter card title', max_length=60, null=True, verbose_name='Twitter Title')),
                ('twitter_description', models.TextField(blank=True, help_text='Twitter card description', max_length=160, null=True, verbose_name='Twitter Description')),
                ('schema_type', models.CharField(blank=True, choices=[('Website', 'Website'), ('Organization', 'Organization'), ('LocalBusiness', 'Local Business'), ('Product', 'Product'), ('Article', 'Article'), ('BlogPosting', 'Blog Posting'), ('WebPage', 'Web Page'), ('AboutPage', 'About Page'), ('ContactPage', 'Contact Page')], default='WebPage', help_text='Schema.org type for structured data', max_length=50, null=True, verbose_name='Schema Type')),
                ('robots_index', models.BooleanField(default=True, help_text='Allow search engines to index this page', verbose_name='Index Page')),
                ('robots_follow', models.BooleanField(default=True, help_text='Allow search engines to follow links on this page', verbose_name='Follow Links')),
                ('canonical_url', models.URLField(blank=True, help_text='Canonical URL for this page (optional)', null=True, verbose_name='Canonical URL')),
                ('google_analytics_id', models.CharField(blank=True, help_text='Google Analytics tracking ID (e.g., GA_MEASUREMENT_ID)', max_length=20, null=True, verbose_name='Google Analytics ID')),
                ('facebook_pixel_id', models.CharField(blank=True, help_text='Facebook Pixel ID', max_length=20, null=True, verbose_name='Facebook Pixel ID')),
                ('introduction', wagtail.fields.RichTextField(blank=True)),
                ('mission_title', models.CharField(default='Our Mission', max_length=100)),
                ('mission_content', wagtail.fields.RichTextField(blank=True)),
                ('vision_title', models.CharField(default='Our Vision', max_length=100)),
                ('vision_content', wagtail.fields.RichTextField(blank=True)),
                ('values_title', models.CharField(default='What We Do', max_length=100)),
                ('values_content', wagtail.fields.RichTextField(blank=True)),
                ('company_image', models.ForeignKey(blank=True, help_text='Company image or office photo', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('og_image', models.ForeignKey(blank=True, help_text='Image for social media sharing (1200x630px recommended)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='OG Image')),
                ('twitter_image', models.ForeignKey(blank=True, help_text='Twitter card image (1200x600px recommended)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Twitter Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='AboutPageFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.CharField(blank=True, help_text='Icon class or emoji', max_length=50)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='about_features', to='business.aboutpage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('website_url', models.URLField(blank=True)),
                ('country_of_origin', models.CharField(blank=True, max_length=100)),
                ('logo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ContactPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('meta_description', models.TextField(blank=True, help_text='Meta description for search engines (max 160 characters). If empty, search_description will be used.', max_length=160, null=True, validators=[django.core.validators.MaxLengthValidator(160)], verbose_name='Meta Description')),
                ('meta_keywords', models.CharField(blank=True, help_text='Keywords separated by commas', max_length=255, null=True, verbose_name='Meta Keywords')),
                ('og_title', models.CharField(blank=True, help_text='Open Graph title (Facebook, Twitter sharing). If empty, seo_title will be used.', max_length=60, null=True, verbose_name='OG Title')),
                ('og_description', models.TextField(blank=True, help_text='Open Graph description (Facebook, Twitter sharing)', max_length=160, null=True, verbose_name='OG Description')),
                ('twitter_title', models.CharField(blank=True, help_text='Twitter card title', max_length=60, null=True, verbose_name='Twitter Title')),
                ('twitter_description', models.TextField(blank=True, help_text='Twitter card description', max_length=160, null=True, verbose_name='Twitter Description')),
                ('schema_type', models.CharField(blank=True, choices=[('Website', 'Website'), ('Organization', 'Organization'), ('LocalBusiness', 'Local Business'), ('Product', 'Product'), ('Article', 'Article'), ('BlogPosting', 'Blog Posting'), ('WebPage', 'Web Page'), ('AboutPage', 'About Page'), ('ContactPage', 'Contact Page')], default='WebPage', help_text='Schema.org type for structured data', max_length=50, null=True, verbose_name='Schema Type')),
                ('robots_index', models.BooleanField(default=True, help_text='Allow search engines to index this page', verbose_name='Index Page')),
                ('robots_follow', models.BooleanField(default=True, help_text='Allow search engines to follow links on this page', verbose_name='Follow Links')),
                ('canonical_url', models.URLField(blank=True, help_text='Canonical URL for this page (optional)', null=True, verbose_name='Canonical URL')),
                ('google_analytics_id', models.CharField(blank=True, help_text='Google Analytics tracking ID (e.g., GA_MEASUREMENT_ID)', max_length=20, null=True, verbose_name='Google Analytics ID')),
                ('facebook_pixel_id', models.CharField(blank=True, help_text='Facebook Pixel ID', max_length=20, null=True, verbose_name='Facebook Pixel ID')),
                ('introduction', wagtail.fields.RichTextField(blank=True)),
                ('phone', models.CharField(default='+92-315-7680420', max_length=20)),
                ('email', models.EmailField(default='azan@sweetbliss.pk', max_length=254)),
                ('address', models.TextField(default='Lahore, Punjab, Pakistan')),
                ('business_hours', wagtail.fields.RichTextField(blank=True)),
                ('map_embed_code', models.TextField(blank=True, help_text='Google Maps embed code')),
                ('og_image', models.ForeignKey(blank=True, help_text='Image for social media sharing (1200x630px recommended)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='OG Image')),
                ('twitter_image', models.ForeignKey(blank=True, help_text='Twitter card image (1200x600px recommended)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Twitter Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('specifications', models.JSONField(blank=True, default=dict)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('is_featured', models.BooleanField(default=False, help_text='Display on homepage')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='business.brand')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.image')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='business.productcategory')),
            ],
            options={
                'ordering': ['-created_at'],
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('meta_description', models.TextField(blank=True, help_text='Meta description for search engines (max 160 characters). If empty, search_description will be used.', max_length=160, null=True, validators=[django.core.validators.MaxLengthValidator(160)], verbose_name='Meta Description')),
                ('meta_keywords', models.CharField(blank=True, help_text='Keywords separated by commas', max_length=255, null=True, verbose_name='Meta Keywords')),
                ('og_title', models.CharField(blank=True, help_text='Open Graph title (Facebook, Twitter sharing). If empty, seo_title will be used.', max_length=60, null=True, verbose_name='OG Title')),
                ('og_description', models.TextField(blank=True, help_text='Open Graph description (Facebook, Twitter sharing)', max_length=160, null=True, verbose_name='OG Description')),
                ('twitter_title', models.CharField(blank=True, help_text='Twitter card title', max_length=60, null=True, verbose_name='Twitter Title')),
                ('twitter_description', models.TextField(blank=True, help_text='Twitter card description', max_length=160, null=True, verbose_name='Twitter Description')),
                ('schema_type', models.CharField(blank=True, choices=[('Website', 'Website'), ('Organization', 'Organization'), ('LocalBusiness', 'Local Business'), ('Product', 'Product'), ('Article', 'Article'), ('BlogPosting', 'Blog Posting'), ('WebPage', 'Web Page'), ('AboutPage', 'About Page'), ('ContactPage', 'Contact Page')], default='WebPage', help_text='Schema.org type for structured data', max_length=50, null=True, verbose_name='Schema Type')),
                ('robots_index', models.BooleanField(default=True, help_text='Allow search engines to index this page', verbose_name='Index Page')),
                ('robots_follow', models.BooleanField(default=True, help_text='Allow search engines to follow links on this page', verbose_name='Follow Links')),
                ('canonical_url', models.URLField(blank=True, help_text='Canonical URL for this page (optional)', null=True, verbose_name='Canonical URL')),
                ('google_analytics_id', models.CharField(blank=True, help_text='Google Analytics tracking ID (e.g., GA_MEASUREMENT_ID)', max_length=20, null=True, verbose_name='Google Analytics ID')),
                ('facebook_pixel_id', models.CharField(blank=True, help_text='Facebook Pixel ID', max_length=20, null=True, verbose_name='Facebook Pixel ID')),
                ('hero_title', models.CharField(default='Sweet Bliss', max_length=200)),
                ('hero_subtitle', models.CharField(default='Bringing Sweet Moments Closer to You', max_length=300)),
                ('hero_description', models.TextField(default='At Sweet Bliss, we carefully source the finest confectionery brands from around the world, delivering premium FMCG products that create joy, flavor, and unforgettable experiences for customers across Pakistan.')),
                ('content_sections', wagtail.fields.StreamField([('hero', 6), ('products', 14), ('features', 18), ('team_members', 23), ('contact', 29)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'help_text': 'Main hero title', 'max_length': 100}), 1: ('wagtail.blocks.TextBlock', (), {'help_text': 'Hero subtitle'}), 2: ('wagtail.blocks.TextBlock', (), {'help_text': 'Hero description'}), 3: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Hero background image'}), 4: ('wagtail.blocks.CharBlock', (), {'help_text': 'Call to action button text', 'max_length': 50}), 5: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Call to action link'}), 6: ('wagtail.blocks.StructBlock', [[('title', 0), ('subtitle', 1), ('description', 2), ('background_image', 3), ('cta_text', 4), ('cta_link', 5)]], {}), 7: ('wagtail.blocks.CharBlock', (), {'help_text': 'Product title', 'max_length': 100}), 8: ('wagtail.blocks.TextBlock', (), {'help_text': 'Product description'}), 9: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Product image'}), 10: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Brand logo'}), 11: ('wagtail.blocks.CharBlock', (), {'help_text': 'Product category', 'max_length': 50}), 12: ('wagtail.blocks.CharBlock', (), {'max_length': 100}), 13: ('wagtail.blocks.ListBlock', (12,), {'help_text': 'Product features'}), 14: ('wagtail.blocks.StructBlock', [[('title', 7), ('description', 8), ('image', 9), ('brand_logo', 10), ('category', 11), ('features', 13)]], {}), 15: ('wagtail.blocks.CharBlock', (), {'help_text': 'Feature title', 'max_length': 100}), 16: ('wagtail.blocks.TextBlock', (), {'help_text': 'Feature description'}), 17: ('wagtail.blocks.CharBlock', (), {'help_text': 'Icon class or emoji', 'max_length': 50}), 18: ('wagtail.blocks.StructBlock', [[('title', 15), ('description', 16), ('icon', 17)]], {}), 19: ('wagtail.blocks.CharBlock', (), {'help_text': 'Team member name', 'max_length': 100}), 20: ('wagtail.blocks.CharBlock', (), {'help_text': 'Job position', 'max_length': 100}), 21: ('wagtail.blocks.TextBlock', (), {'help_text': 'Short biography'}), 22: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Team member photo', 'required': False}), 23: ('wagtail.blocks.StructBlock', [[('name', 19), ('position', 20), ('bio', 21), ('photo', 22)]], {}), 24: ('wagtail.blocks.CharBlock', (), {'help_text': 'Contact section title', 'max_length': 100}), 25: ('wagtail.blocks.TextBlock', (), {'help_text': 'Contact description'}), 26: ('wagtail.blocks.CharBlock', (), {'help_text': 'Phone number', 'max_length': 20}), 27: ('wagtail.blocks.EmailBlock', (), {'help_text': 'Email address'}), 28: ('wagtail.blocks.TextBlock', (), {'help_text': 'Physical address'}), 29: ('wagtail.blocks.StructBlock', [[('title', 24), ('description', 25), ('phone', 26), ('email', 27), ('address', 28)]], {})})),
                ('hero_background', models.ForeignKey(blank=True, help_text='Hero background image', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('og_image', models.ForeignKey(blank=True, help_text='Image for social media sharing (1200x630px recommended)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='OG Image')),
                ('twitter_image', models.ForeignKey(blank=True, help_text='Twitter card image (1200x600px recommended)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Twitter Image')),
                ('featured_products', models.ManyToManyField(blank=True, help_text='Products to feature on homepage', to='business.product')),
            ],
            options={
                'verbose_name': 'Home Page',
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='ProductsPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('meta_description', models.TextField(blank=True, help_text='Meta description for search engines (max 160 characters). If empty, search_description will be used.', max_length=160, null=True, validators=[django.core.validators.MaxLengthValidator(160)], verbose_name='Meta Description')),
                ('meta_keywords', models.CharField(blank=True, help_text='Keywords separated by commas', max_length=255, null=True, verbose_name='Meta Keywords')),
                ('og_title', models.CharField(blank=True, help_text='Open Graph title (Facebook, Twitter sharing). If empty, seo_title will be used.', max_length=60, null=True, verbose_name='OG Title')),
                ('og_description', models.TextField(blank=True, help_text='Open Graph description (Facebook, Twitter sharing)', max_length=160, null=True, verbose_name='OG Description')),
                ('twitter_title', models.CharField(blank=True, help_text='Twitter card title', max_length=60, null=True, verbose_name='Twitter Title')),
                ('twitter_description', models.TextField(blank=True, help_text='Twitter card description', max_length=160, null=True, verbose_name='Twitter Description')),
                ('schema_type', models.CharField(blank=True, choices=[('Website', 'Website'), ('Organization', 'Organization'), ('LocalBusiness', 'Local Business'), ('Product', 'Product'), ('Article', 'Article'), ('BlogPosting', 'Blog Posting'), ('WebPage', 'Web Page'), ('AboutPage', 'About Page'), ('ContactPage', 'Contact Page')], default='WebPage', help_text='Schema.org type for structured data', max_length=50, null=True, verbose_name='Schema Type')),
                ('robots_index', models.BooleanField(default=True, help_text='Allow search engines to index this page', verbose_name='Index Page')),
                ('robots_follow', models.BooleanField(default=True, help_text='Allow search engines to follow links on this page', verbose_name='Follow Links')),
                ('canonical_url', models.URLField(blank=True, help_text='Canonical URL for this page (optional)', null=True, verbose_name='Canonical URL')),
                ('google_analytics_id', models.CharField(blank=True, help_text='Google Analytics tracking ID (e.g., GA_MEASUREMENT_ID)', max_length=20, null=True, verbose_name='Google Analytics ID')),
                ('facebook_pixel_id', models.CharField(blank=True, help_text='Facebook Pixel ID', max_length=20, null=True, verbose_name='Facebook Pixel ID')),
                ('introduction', wagtail.fields.RichTextField(blank=True)),
                ('og_image', models.ForeignKey(blank=True, help_text='Image for social media sharing (1200x630px recommended)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='OG Image')),
                ('twitter_image', models.ForeignKey(blank=True, help_text='Twitter card image (1200x600px recommended)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Twitter Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('bio', models.TextField(blank=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('linkedin_url', models.URLField(blank=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TeamPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('meta_description', models.TextField(blank=True, help_text='Meta description for search engines (max 160 characters). If empty, search_description will be used.', max_length=160, null=True, validators=[django.core.validators.MaxLengthValidator(160)], verbose_name='Meta Description')),
                ('meta_keywords', models.CharField(blank=True, help_text='Keywords separated by commas', max_length=255, null=True, verbose_name='Meta Keywords')),
                ('og_title', models.CharField(blank=True, help_text='Open Graph title (Facebook, Twitter sharing). If empty, seo_title will be used.', max_length=60, null=True, verbose_name='OG Title')),
                ('og_description', models.TextField(blank=True, help_text='Open Graph description (Facebook, Twitter sharing)', max_length=160, null=True, verbose_name='OG Description')),
                ('twitter_title', models.CharField(blank=True, help_text='Twitter card title', max_length=60, null=True, verbose_name='Twitter Title')),
                ('twitter_description', models.TextField(blank=True, help_text='Twitter card description', max_length=160, null=True, verbose_name='Twitter Description')),
                ('schema_type', models.CharField(blank=True, choices=[('Website', 'Website'), ('Organization', 'Organization'), ('LocalBusiness', 'Local Business'), ('Product', 'Product'), ('Article', 'Article'), ('BlogPosting', 'Blog Posting'), ('WebPage', 'Web Page'), ('AboutPage', 'About Page'), ('ContactPage', 'Contact Page')], default='WebPage', help_text='Schema.org type for structured data', max_length=50, null=True, verbose_name='Schema Type')),
                ('robots_index', models.BooleanField(default=True, help_text='Allow search engines to index this page', verbose_name='Index Page')),
                ('robots_follow', models.BooleanField(default=True, help_text='Allow search engines to follow links on this page', verbose_name='Follow Links')),
                ('canonical_url', models.URLField(blank=True, help_text='Canonical URL for this page (optional)', null=True, verbose_name='Canonical URL')),
                ('google_analytics_id', models.CharField(blank=True, help_text='Google Analytics tracking ID (e.g., GA_MEASUREMENT_ID)', max_length=20, null=True, verbose_name='Google Analytics ID')),
                ('facebook_pixel_id', models.CharField(blank=True, help_text='Facebook Pixel ID', max_length=20, null=True, verbose_name='Facebook Pixel ID')),
                ('introduction', wagtail.fields.RichTextField(blank=True)),
                ('og_image', models.ForeignKey(blank=True, help_text='Image for social media sharing (1200x630px recommended)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='OG Image')),
                ('twitter_image', models.ForeignKey(blank=True, help_text='Twitter card image (1200x600px recommended)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Twitter Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
    ]
