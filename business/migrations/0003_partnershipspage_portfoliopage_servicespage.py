# Generated by Django 5.2.5 on 2025-09-02 00:47

import django.core.validators
import django.db.models.deletion
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('business', '0002_alter_brand_logo'),
        ('wagtailcore', '0095_groupsitepermission'),
        ('wagtailimages', '0027_image_description'),
    ]

    operations = [
        migrations.CreateModel(
            name='PartnershipsPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('meta_description', models.TextField(blank=True, help_text='Meta description for search engines (max 160 characters). If empty, search_description will be used.', max_length=160, null=True, validators=[django.core.validators.MaxLengthValidator(160)], verbose_name='Meta Description')),
                ('meta_keywords', models.CharField(blank=True, help_text='Keywords separated by commas', max_length=255, null=True, verbose_name='Meta Keywords')),
                ('og_title', models.CharField(blank=True, help_text='Open Graph title (Facebook, Twitter sharing). If empty, seo_title will be used.', max_length=60, null=True, verbose_name='OG Title')),
                ('og_description', models.TextField(blank=True, help_text='Open Graph description (Facebook, Twitter sharing)', max_length=160, null=True, verbose_name='OG Description')),
                ('twitter_title', models.CharField(blank=True, help_text='Twitter card title', max_length=60, null=True, verbose_name='Twitter Title')),
                ('twitter_description', models.TextField(blank=True, help_text='Twitter card description', max_length=160, null=True, verbose_name='Twitter Description')),
                ('schema_type', models.CharField(blank=True, choices=[('Website', 'Website'), ('Organization', 'Organization'), ('LocalBusiness', 'Local Business'), ('Product', 'Product'), ('Article', 'Article'), ('BlogPosting', 'Blog Posting'), ('WebPage', 'Web Page'), ('AboutPage', 'About Page'), ('ContactPage', 'Contact Page')], default='WebPage', help_text='Schema.org type for structured data', max_length=50, null=True, verbose_name='Schema Type')),
                ('robots_index', models.BooleanField(default=True, help_text='Allow search engines to index this page', verbose_name='Index Page')),
                ('robots_follow', models.BooleanField(default=True, help_text='Allow search engines to follow links on this page', verbose_name='Follow Links')),
                ('canonical_url', models.URLField(blank=True, help_text='Canonical URL for this page (optional)', null=True, verbose_name='Canonical URL')),
                ('google_analytics_id', models.CharField(blank=True, help_text='Google Analytics tracking ID (e.g., GA_MEASUREMENT_ID)', max_length=20, null=True, verbose_name='Google Analytics ID')),
                ('facebook_pixel_id', models.CharField(blank=True, help_text='Facebook Pixel ID', max_length=20, null=True, verbose_name='Facebook Pixel ID')),
                ('introduction', wagtail.fields.RichTextField(blank=True, help_text='Partnership opportunities introduction')),
                ('why_partner', wagtail.fields.RichTextField(blank=True, help_text='Why partner with Sweet Bliss')),
                ('partnership_benefits', wagtail.fields.RichTextField(blank=True, help_text='Partnership benefits and advantages')),
                ('how_to_partner', wagtail.fields.RichTextField(blank=True, help_text='How to become a partner')),
                ('og_image', models.ForeignKey(blank=True, help_text='Image for social media sharing (1200x630px recommended)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='OG Image')),
                ('twitter_image', models.ForeignKey(blank=True, help_text='Twitter card image (1200x600px recommended)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Twitter Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='PortfolioPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('meta_description', models.TextField(blank=True, help_text='Meta description for search engines (max 160 characters). If empty, search_description will be used.', max_length=160, null=True, validators=[django.core.validators.MaxLengthValidator(160)], verbose_name='Meta Description')),
                ('meta_keywords', models.CharField(blank=True, help_text='Keywords separated by commas', max_length=255, null=True, verbose_name='Meta Keywords')),
                ('og_title', models.CharField(blank=True, help_text='Open Graph title (Facebook, Twitter sharing). If empty, seo_title will be used.', max_length=60, null=True, verbose_name='OG Title')),
                ('og_description', models.TextField(blank=True, help_text='Open Graph description (Facebook, Twitter sharing)', max_length=160, null=True, verbose_name='OG Description')),
                ('twitter_title', models.CharField(blank=True, help_text='Twitter card title', max_length=60, null=True, verbose_name='Twitter Title')),
                ('twitter_description', models.TextField(blank=True, help_text='Twitter card description', max_length=160, null=True, verbose_name='Twitter Description')),
                ('schema_type', models.CharField(blank=True, choices=[('Website', 'Website'), ('Organization', 'Organization'), ('LocalBusiness', 'Local Business'), ('Product', 'Product'), ('Article', 'Article'), ('BlogPosting', 'Blog Posting'), ('WebPage', 'Web Page'), ('AboutPage', 'About Page'), ('ContactPage', 'Contact Page')], default='WebPage', help_text='Schema.org type for structured data', max_length=50, null=True, verbose_name='Schema Type')),
                ('robots_index', models.BooleanField(default=True, help_text='Allow search engines to index this page', verbose_name='Index Page')),
                ('robots_follow', models.BooleanField(default=True, help_text='Allow search engines to follow links on this page', verbose_name='Follow Links')),
                ('canonical_url', models.URLField(blank=True, help_text='Canonical URL for this page (optional)', null=True, verbose_name='Canonical URL')),
                ('google_analytics_id', models.CharField(blank=True, help_text='Google Analytics tracking ID (e.g., GA_MEASUREMENT_ID)', max_length=20, null=True, verbose_name='Google Analytics ID')),
                ('facebook_pixel_id', models.CharField(blank=True, help_text='Facebook Pixel ID', max_length=20, null=True, verbose_name='Facebook Pixel ID')),
                ('introduction', wagtail.fields.RichTextField(blank=True, help_text='Portfolio overview introduction')),
                ('quality_commitment', wagtail.fields.RichTextField(blank=True, help_text='Quality commitment statement')),
                ('og_image', models.ForeignKey(blank=True, help_text='Image for social media sharing (1200x630px recommended)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='OG Image')),
                ('twitter_image', models.ForeignKey(blank=True, help_text='Twitter card image (1200x600px recommended)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Twitter Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='ServicesPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('meta_description', models.TextField(blank=True, help_text='Meta description for search engines (max 160 characters). If empty, search_description will be used.', max_length=160, null=True, validators=[django.core.validators.MaxLengthValidator(160)], verbose_name='Meta Description')),
                ('meta_keywords', models.CharField(blank=True, help_text='Keywords separated by commas', max_length=255, null=True, verbose_name='Meta Keywords')),
                ('og_title', models.CharField(blank=True, help_text='Open Graph title (Facebook, Twitter sharing). If empty, seo_title will be used.', max_length=60, null=True, verbose_name='OG Title')),
                ('og_description', models.TextField(blank=True, help_text='Open Graph description (Facebook, Twitter sharing)', max_length=160, null=True, verbose_name='OG Description')),
                ('twitter_title', models.CharField(blank=True, help_text='Twitter card title', max_length=60, null=True, verbose_name='Twitter Title')),
                ('twitter_description', models.TextField(blank=True, help_text='Twitter card description', max_length=160, null=True, verbose_name='Twitter Description')),
                ('schema_type', models.CharField(blank=True, choices=[('Website', 'Website'), ('Organization', 'Organization'), ('LocalBusiness', 'Local Business'), ('Product', 'Product'), ('Article', 'Article'), ('BlogPosting', 'Blog Posting'), ('WebPage', 'Web Page'), ('AboutPage', 'About Page'), ('ContactPage', 'Contact Page')], default='WebPage', help_text='Schema.org type for structured data', max_length=50, null=True, verbose_name='Schema Type')),
                ('robots_index', models.BooleanField(default=True, help_text='Allow search engines to index this page', verbose_name='Index Page')),
                ('robots_follow', models.BooleanField(default=True, help_text='Allow search engines to follow links on this page', verbose_name='Follow Links')),
                ('canonical_url', models.URLField(blank=True, help_text='Canonical URL for this page (optional)', null=True, verbose_name='Canonical URL')),
                ('google_analytics_id', models.CharField(blank=True, help_text='Google Analytics tracking ID (e.g., GA_MEASUREMENT_ID)', max_length=20, null=True, verbose_name='Google Analytics ID')),
                ('facebook_pixel_id', models.CharField(blank=True, help_text='Facebook Pixel ID', max_length=20, null=True, verbose_name='Facebook Pixel ID')),
                ('introduction', wagtail.fields.RichTextField(blank=True, help_text='Introduction to services')),
                ('importing_services', wagtail.fields.RichTextField(blank=True, help_text='Importing services description')),
                ('distribution_services', wagtail.fields.RichTextField(blank=True, help_text='Distribution services description')),
                ('partnership_services', wagtail.fields.RichTextField(blank=True, help_text='Partnership services description')),
                ('og_image', models.ForeignKey(blank=True, help_text='Image for social media sharing (1200x630px recommended)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='OG Image')),
                ('twitter_image', models.ForeignKey(blank=True, help_text='Twitter card image (1200x600px recommended)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Twitter Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
    ]
